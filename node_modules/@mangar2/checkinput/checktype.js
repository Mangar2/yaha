/**
 * @license
 * This software is licensed under the GNU LESSER GENERAL PUBLIC LICENSE Version 3. It is furnished
 * "as is", without any support, and with no warranty, express or implied, as to its usefulness for
 * any purpose.
 *
 * @author Volker Böhm
 * @copyright Copyright (c) 2020 Volker Böhm
 */

'use scrict'

const types = require('@mangar2/types')
const CheckResult = require('./checkresult')

/**
 * @private
 * @description Checks the basic type of a variable
 * @param {Object} definition variable definition
 * @param {string|Array} definition.type allowed type(s) of the variable
 * @param {any} variable input data
 * @returns {CheckResult} result of the check with 'check' and 'message'
 */
function checkType (definition, variable) {
    const result = new CheckResult(true)
    if (definition.type !== undefined) {
        const typeList = types.isArray(definition.type) ? definition.type : [definition.type]
        for (const type of typeList) {
            switch (type) {
            case 'string': result.check = types.isString(variable); break
            case 'number': result.check = types.isNumber(variable); break
            case 'integer': result.check = Number.isInteger(variable); break
            case 'array': result.check = types.isArray(variable); break
            case 'object': result.check = types.isObject(variable); break
            case 'boolean': result.check = types.isBoolean(variable); break
            case 'null': result.check = variable === null; break
            }
            if (result.check) {
                break
            }
        }
        if (!result.check) {
            result.invalidate('types does not match, required is: ' + JSON.stringify(typeList))
        }
    }
    return result
}

module.exports = checkType
