/**
 * @license
 * This software is licensed under the GNU LESSER GENERAL PUBLIC LICENSE Version 3. It is furnished
 * "as is", without any support, and with no warranty, express or implied, as to its usefulness for
 * any purpose.
 *
 * @author Volker Böhm
 * @copyright Copyright (c) 2020 Volker Böhm
 */

'use scrict'

const CheckInput = require('../checkinput')
const { UnitTest } = require('@mangar2/unittest')

const VERBOSE = false
const unitTest = new UnitTest(VERBOSE)

/**
 * Reads a test set and processes it
 * @param {string} fileName name of the test file
 */
function checkSchema (fileName) {
    const definition = require('./' + fileName + '.json')
    for (const schema of definition) {
        const check = new CheckInput(schema.schema)
        for (const test of schema.tests) {
            const result = check.validate(test.data)
            if (result !== test.valid) {
                // for debuggin, set breakpoint here
                check.validate(test.data)
            }
            unitTest.assertEqual(result, test.valid, fileName + ': ' + schema.description + ' - ' + test.description)
            if (check.messages !== undefined) {
                unitTest.log(check.messages)
            }
        }
    }
}

const files = [
    'rulevalidation',
    'additionalItems',
    'additionalProperties',
    'allOf',
    'anyOf',
    'boolean_schema',
    'const',
    'contains',
    // 'definitions',
    'dependencies',
    'default',
    'enum',
    'exclusiveMaximum',
    'exclusiveMinimum',
    'if-then-else',
    'items',
    'maximum',
    'maxItems',
    'maxLength',
    'maxProperties',
    'minimum',
    'minItems',
    'minLength',
    'minProperties',
    'multipleOf',
    'not',
    'oneOf',
    'pattern',
    'patternProperties',
    'properties',
    'propertyNames',
    'ref',
    // 'refRemote',
    'required',
    'type',
    'uniqueItems',
    'optional/bignum',
    // 'optional/content',
    // 'optional/ecmascript-regex',
    'optional/zeroTerminatedFloats',
    'optional/format/date'
]

for (const file of files) {
    checkSchema(file)
}

unitTest.showResult(485)
