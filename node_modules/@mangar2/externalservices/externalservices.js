/**
 * @license
 * This software is licensed under the GNU LESSER GENERAL PUBLIC LICENSE Version 3. It is furnished
 * "as is", without any support, and with no warranty, express or implied, as to its usefulness for
 * any purpose.
 *
 * @author Volker Böhm
 * @copyright Copyright (c) 2020 Volker Böhm
 * @description
 * Yaha microservice supporting external connections
 * opensensemap - send data to the opensensemap
 * pushover - send data to the pushover app
 * sunnyportal - reads data from sunnyportal
 * You need to provide a configuration file called "yahaconfig.json" stored in the root directory.
 * You need to provide the configuration for all used modules services and for the mqttclient
 * (see mqttclient, opensensemap, pushover, sunnyportal modules)
 *
 * @example
 * npm run
 */

'use strict'

const MqttClient = require('@mangar2/mqttclient')

// path to your configuration file
const allConfig = require('../../../yahaconfig.json')
const config = require('@mangar2/config')(allConfig)
const mqttClient = new MqttClient(config.externalServices)

mqttClient.run()

/**
 * Register opensensemap
 */
if (config.opensensemap && config.externalServices.services.includes('opensensemap')) {
    const opensensemap = require('@mangar2/opensensemap')
    const subscriptions = opensensemap.getSubscriptions(config.opensensemap)
    mqttClient.registerRecipient(subscriptions, (message) => {
        return opensensemap.publish(message, config.opensensemap)
    })
    console.log('started service opensensemap')
}

/**
 * Register pushover
 */
if (config.pushover && config.externalServices.services.includes('pushover')) {
    const pushover = require('@mangar2/pushover')
    const subscriptions = config.pushover.subscriptions
    mqttClient.registerRecipient(subscriptions, (message) => {
        return pushover.publish(message, config.pushover)
    })
    console.log('started service pushover')
}

/**
 * Register sunnyportal
 */
if (config.sunnyportal && config.externalServices.services.includes('sunnyportal')) {
    const Sunnyportal = require('@mangar2/sunnyportal')
    const sunnyportal = new Sunnyportal(config.sunnyportal)
    mqttClient.registerSender(config.sunnyportal.intervalInSeconds * 1000, async () => {
        return sunnyportal.getMessages()
    })
    console.log('started service sunnyportal')
}
