{
    "$def": {
        "class headline": [
            { "text": "\n## class @class\n\n" },
            { "text": "`new @class(" },
            { "$ref": "parameter list" },
            { "text": ")`\n\n" },
            { "if exists": "description", "text": "@description\n" }
        ],
        "parameter table": [
            {
                "text": "| Name | Type | Description |\n| ---- | ---- | ---- | ---- | ----------- |\n",
                "iterate on": "param",
                "for each": { 
                    "text": "| `@name` | `@types` | @description |\n"
                }
            },
            {
                "iterate on": "param",
                "for each": {
                    "if exists": "param",
                    "text": "\n#### @name properties\n\n",
                    "$ref": "parameter table"
                }
            }
        ],
        "parameter list": {
            "iterate on": "param",
            "for each": { "text": "@name", "separator": ", " }
        },
        "return table": {
            "if exists": "returns",
            "text": "\n#### Returns\n\n| Type | Description |\n| ---- | ----------- |\n",
            "iterate on": "returns",
            "for each": { "text": "| `@types` | @description |\n" }
        },
        "throws table": {
            "if exists": "throws",
            "text": "\n#### Throws\n\n| Type | Description |\n| ---- | ----------- |\n",
            "iterate on": "throws",
            "for each": { "text": "| `@types` | @description |\n" }
        },
        "method call": [
            { "text": "`" },
            { "if exists": "async", "text": "async " },
            { "text": "@method (" },
            { "$ref": "parameter list" },
            { "text": ")" },
            { "iterate on": "returns", "for each": { "text": " => {@types}"} },
            { "text": "`\n\n" },
            { "if exists": "description", "text": "@description\n" }
        ]
    },
    "templates": [
        [
            { "text": "<!-- This file is generated by jsmddoc version 0.1 -->\n\n" },
            { "text": "# Abstract\n" },
            { "if exists": "overview", "text": "\n@overview\n" }
        ],
        [
            { "text": "\n## Contents\n\n" },
            { "text": "- [Meta](#Meta)\n" },
            {
                "iterate on": "class",
                "for each": [
                    { "text": "- [class @class](#class-@class)\n" },
                    {
                        "iterate on": "details",
                        "for each": { "text": "  - [@method](#@method)\n"}
                    }
                ]
            }
        ],
        [
            { "text": "\n## Meta\n\n" },
            { "text": "| | |\n| --- | --- |\n"},
            { "if exists": "file", "text": "| **File** | @filename |\n"},
            { "if exists": "author", "text": "| **Author** | @author |\n" },
            { "if exists": "copyright", "text": "| **Copyright** | @copyright |\n" },
            { "if exists": "license", "text": "| **License** | @license |\n" },
            {
                "iterate on": "class",
                "for each": [
                    { "$ref": "class headline" },
                    { "if exists": "param", "text": "\n## Parameters\n\n", "$ref": "parameter table" },
                    { "if exists": "example", "text": "\n### Example\n\n```javascript\n@example\n```\n"},
                    {
                        "iterate on": "details",
                        "for each": [
                            { "text": "\n### @method\n\n" },
                            { "$ref": "method call" },
                            { "if exists": "param", "text": "\n#### Parameters\n\n", "$ref": "parameter table" },
                            { "$ref": "throws table" },
                            { "$ref": "return table" }
                        ]
                    }
                ]
            }
        ]
    ]
}
