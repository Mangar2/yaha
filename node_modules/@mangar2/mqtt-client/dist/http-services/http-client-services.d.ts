/**
 * @license
 * This software is licensed under the GNU LESSER GENERAL PUBLIC LICENSE Version 3. It is furnished
 * "as is", without any support, and with no warranty, express or implied, as to its usefulness for
 * any purpose.
 *
 * @author Volker Böhm
 * @copyright Copyright (c) 2020 Volker Böhm
 * @overview Provides functionalities to communicate with an mqtt broker over http
 */
import { Logger, SubscribeResult, ConnectResult, topics_t, IMessage } from '@mangar2/mqtt-utils';
import { IMqttClientServices } from '../mqtt-service/imqtt-client-services';
import { BrokerOptions } from '../service/types';
export type version_t = '0.0' | '1.0';
/**
 * Represents the options for configuring an MQTT client.
 */
export type HttpClientOptions = {
    /**
     * The client ID used to identify the MQTT client.
     */
    clientId: string;
    /**
     * The options for configuring the MQTT broker.
     */
    brokerOptions: BrokerOptions;
    /**
     * The listener port number for the MQTT client.
     */
    listener?: number;
    /**
     * The version of the MQTT protocol to use.
     */
    version?: version_t;
};
export declare class HttpClient implements IMqttClientServices {
    private options;
    private _logger;
    private _server;
    private _client;
    constructor(options: HttpClientOptions, _logger: Logger);
    supportsFeature(feature: string): boolean;
    connect(clientId: string, clean: boolean, version?: string): Promise<ConnectResult>;
    disconnect(): Promise<void>;
    subscribe(topics: topics_t): Promise<SubscribeResult>;
    pingreq(token: string): Promise<void>;
    publish(token: string, message: IMessage, serviceName: string): Promise<string[]>;
    onPublish(callback: (message: IMessage) => void): void;
    start(): void;
    close(): void;
}
