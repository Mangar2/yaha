/**
 * @license
 * This software is licensed under the GNU LESSER GENERAL PUBLIC LICENSE Version 3. It is furnished
 * "as is", without any support, and with no warranty, express or implied, as to its usefulness for
 * any purpose.
 *
 * @author Volker Böhm
 * @copyright Copyright (c) 2024 Volker Böhm
 */
type LogEntry = {
    module: 'all' | 'send' | 'receive';
    topic: '#';
    level: number;
};
interface Broker {
    port: string | number;
    host: string;
}
export interface RunServices {
    clientId: string;
    version: '0.0' | '1.0';
    clean: boolean;
    broker: Broker;
    listener: string | number;
    keepAliveInSeconds: number;
    services: string[];
    log: LogEntry[];
}
export interface IServiceConfiguration {
    intervalInSeconds: number;
    [key: string]: any;
}
export interface ServiceContainer {
    runservices: RunServices;
    [key: string]: IServiceConfiguration | RunServices;
}
export declare const configurationSchema: {
    properties: {
        clientId: {
            type: string;
        };
        version: {
            enum: string[];
        };
        clean: {
            type: string;
        };
        broker: {
            $ref: string;
        };
        listener: {
            type: string[];
        };
        keepAliveInSeconds: {
            type: string;
        };
        log: {
            $ref: string;
        };
        services: {
            type: string;
            items: {
                enum: string[];
            };
        };
        required: string[];
        additionalProperties: boolean;
    };
    definitions: {
        broker: {
            $id: string;
            type: string;
            properties: {
                port: {
                    type: string[];
                };
                host: {
                    type: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        log: {
            $id: string;
            type: string;
            items: {
                type: string;
                properties: {
                    module: {
                        enum: string[];
                    };
                    topic: {
                        type: string;
                    };
                    level: {
                        type: string;
                    };
                };
                required: string[];
                additionalProperties: boolean;
            };
        };
    };
};
export declare const defaultConfiguration: {
    clientId: string;
    version: string;
    clean: boolean;
    broker: {
        port: number;
        host: string;
    };
    listener: number;
    keepAliveInSeconds: number;
    log: {
        module: string;
        topic: string;
        level: number;
    }[];
};
export {};
