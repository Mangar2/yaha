/**
 * @license
 * This software is licensed under the GNU LESSER GENERAL PUBLIC LICENSE Version 3. It is furnished
 * "as is", without any support, and with no warranty, express or implied, as to its usefulness for
 * any purpose.
 *
 * @author Volker Böhm
 * @copyright Copyright (c) 2020 Volker Böhm
 * @overview Provides functions to connect to the (http based) yaha mqtt broker
 */
import { OnPublish } from './on-publish';
import { IMqttServer } from './i-mqtt-server';
/**
 * Provides functions to receive data
 */
export declare class HttpReceiveServices {
    private _httpServer;
    private _onPublish;
    private _onConnect;
    /**
     * Creates a new http service
     * @param port the port on which the server listens
     */
    constructor(port: number, logPattern?: any, qos2PubrelTimeoutInSeconds?: number);
    /**
     * Enables handling of connect requests
     * @param mqttServer the mqtt server
     * @returns {void}
     */
    enableConnect(mqttServer: IMqttServer): void;
    /**
     * Listen for incoming http requests, e.g. from the broker
     * Sets the port used by the server
     */
    listen(): void;
    /**
     * Closes the server
     */
    close(): void;
    /**
     * Registers the post method for the server
     * If the request is a publish request, the request is handled by the onPublish object
     * @private
     * @returns {void}
     */
    private _registerPut;
    /**
     * Gets the port used by the server
     * It is valid only after the listen method has been called
     * @returns {number} the port used by the server
     */
    get port(): number;
    /**
     * Gets the onPublish object
     * @returns {OnPublish} the onPublish object, if enabled
     * @throws {Error} if onPublish is not enabled
     */
    get onPublish(): OnPublish;
}
