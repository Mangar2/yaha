"use strict";
/**
 * @license
 * This software is licensed under the GNU LESSER GENERAL PUBLIC LICENSE Version 3. It is furnished
 * "as is", without any support, and with no warranty, express or implied, as to its usefulness for
 * any purpose.
 *
 * @author Volker Böhm
 * @copyright Copyright (c) 2020 Volker Böhm
 * @overview Provides functions to connect to the (http based) yaha mqtt broker
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.HttpSendServices = void 0;
const httpservice_1 = require("@mangar2/httpservice");
const publish_1 = require("./publish");
const connect_1 = require("./connect");
/**
 * Provides functions to send data to the broker
 */
class HttpSendServices {
    /**
     * Creates a new http service
     * @param port the port on which the server listens
     */
    constructor(senderName, brokerOptions) {
        this._httpClient = new httpservice_1.HttpClient(brokerOptions.host, brokerOptions.port, 'http');
        this._publish = new publish_1.Publish();
        this._publish.on('send', (httpMethod, path, headers, payload) => {
            return this._httpClient.sendv2({ path, method: httpMethod, headers, payload });
        });
        this._connect = new connect_1.Connect(senderName);
        this._connect.on('send', (httpMethod, path, headers, payload) => {
            return this._httpClient.sendv2({ path, method: httpMethod, headers, payload });
        });
    }
    /**
     * Publishes a message
     */
    async publish(token, message, version = '1.0') {
        return this._publish.publish(token, message, version);
    }
    /**
     * Gets the connect object
     */
    get connect() {
        return this._connect;
    }
}
exports.HttpSendServices = HttpSendServices;
//# sourceMappingURL=http-send-services.js.map