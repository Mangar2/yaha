/**
 * @license
 * This software is licensed under the GNU LESSER GENERAL PUBLIC LICENSE Version 3. It is furnished
 * "as is", without any support, and with no warranty, express or implied, as to its usefulness for
 * any purpose.
 *
 * @author Volker Böhm
 * @copyright Copyright (c) 2020 Volker Böhm
 */

import { Result, RequestData, standardHeaderText } from "./interfaces"


/**
 * Interface representing the options for pubrel function.
 */
interface PubrelOptions {
    token: string,
    packetid?: string
}

/**
 * Creates the objects for a qos=2 commit message "pubcomp".
 */
export const pubrel: Record<string, (options: PubrelOptions) => RequestData> = {
    '0.0': ({ token, packetid }) => {
        const payload = { token };
        const headers: Record<string, string> = { ...standardHeaderText, version: '0.0' };
        if (packetid !== undefined) {
            headers.id = packetid;
        }

        const resultCheck = (result: Result) => {
            return result.statusCode === 200 &&
                result.headers['content-type'].startsWith('text/plain') &&
                result.payload.toLowerCase() === 'pubcomp' &&
                result.headers.id === packetid;
        }

        return { headers, payload, resultCheck };
    },

    '1.0': ({ token, packetid }) => {
        const payload = { token };
        const headers: Record<string, string> = { ...standardHeaderText, version: '1.0' };
        if (packetid !== undefined) {
            headers.packetid = packetid;
        }

        const resultCheck = (result: Result) => {
            const statusOk = result.statusCode === 204;
            const packetIdMatches = result.headers.packetid === packetid;
            const packetNameOk = result.headers.packet === 'pubcomp';
            return statusOk && packetIdMatches && packetNameOk;
        }
        return { headers, payload, resultCheck };
    }
}

/**
 * Creates the return types for a receive pubrel message.
 */
export const onPubrel: Record<string, (headers: Record<string, string>) => Result> = {
    '0.0': headers => {
        const version = '0.0';
        const packetid = headers.id;

        const result: Result = {
            headers: { 'content-type': 'text/plain; charset=UTF-8', version, packetid },
            payload: 'pubcomp',
            statusCode: 200,
            packetid: Number(packetid)
        };
        return result;
    },
    '1.0': headers => {
        const version = '1.0';
        const packet = 'pubcomp';
        const packetid = headers.packetid;

        const result: Result = {
            headers: { 'content-type': 'text/plain; charset=UTF-8', version, packet, packetid },
            payload: '',
            statusCode: 204,
            packetid: Number(packetid)
        };
        return result;
    }
}



