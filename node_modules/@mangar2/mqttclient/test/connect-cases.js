module.exports = [
    {
        description: 'Connect test',
        clientId: 'test-client',
        tests: [
            {
                description: 'Testing connect method, clean session',
                method: 'connect',
                args: [true, '1.0', 600000],
                result: { statusCode: 200, headers: { 'content-type': 'application/json', packet: 'connack' }, payload: '{ "token": "abcd" }' },
                expected: {
                    'result': 'abcd',
                    'history': [
                        {
                            'path': 'put',
                            'method': '/connect',
                            'headers': {
                                'content-type': 'application/json; charset=UTF-8',
                                'accept': 'application/json,text/plain',
                                'accept-charset': 'UTF-8',
                                'version': '1.0'
                            },
                            'payload': {
                                'clientId': 'test-client',
                                'host': 'localhost',
                                'port': 0,
                                'clean': true,
                                'keepAlive': 600000
                            }
                        }
                    ]
                }
            },
            {
                description: 'Testing connect method, non clean session',
                method: 'connect',
                args: [false, '1.0', 600000],
                result: { statusCode: 200, headers: { 'content-type': 'application/json', packet: 'connack' }, payload: '{ "token": "abc" }' },
                expected: {
                    'result': 'abc',
                    'history': [
                        {
                            'payload': {
                                'clean': false,
                            }
                        }
                    ]
                }
            },
            {
                description: 'Testing connect method, missing connack',
                method: 'connect',
                args: [false, '1.0', 600000],
                result: { statusCode: 200, headers: { 'content-type': 'application/json', packet: 'ack' }, payload: '{ "token": "abcd" }' },
                expected: {
                    'result': 'Unable to connect, acknowledge \'connack\' expected, got ack',
                    'history': [
                        {
                            'payload': {
                                'clean': false,
                            }
                        }
                    ]
                }
            },
            {
                description: 'Testing connect method, missing token',
                method: 'connect',
                args: [false, '1.0', 600000],
                result: { statusCode: 200, headers: { 'content-type': 'application/json', packet: 'connack' }, payload: '{ }' },
                expected: {
                    'result': 'Unable to connect, no connection token received',
                    'history': [
                        {
                            'payload': {
                                'clean': false,
                            }
                        }
                    ]
                }
            },
            {
                description: 'Testing connect method, headers not application/json',
                method: 'connect',
                args: [false, '1.0', 600000],
                result: { statusCode: 200, headers: { 'content-type': 'text', packet: 'connack' }, payload: '{ }' },
                expected: {
                    'result': 'Unable to connect, returned content type is not application/json',
                    'history': [
                        {
                            'payload': {
                                'clean': false,
                            }
                        }
                    ]
                }
            }
        ]
    },
    {
        description: 'Disconnect tests',
        clientId: 'test-client',
        tests: [
            {
                description: 'Testing disconnect method, success',
                method: 'disconnect',
                args: ['1.0'],
                result: { statusCode: 204, headers: { 'content-type': 'text' }},
                expected: {
                    'result': 'abcd',
                    'history': [
                        {
                            'path': 'put',
                            'method': '/connect',
                            'headers': {
                                'content-type': 'application/json; charset=UTF-8',
                                'accept': 'application/json,text/plain',
                                'accept-charset': 'UTF-8',
                                'version': '1.0'
                            },
                            'payload': {
                                'clientId': 'test-client',
                                'host': 'localhost',
                                'port': 0,
                                'clean': true,
                                'keepAlive': 600000
                            }
                        }
                    ]
                }
            },
        ]
    }
    /*
    {
        description: 'Connect class - Disconnection and error handling',
        clientId: 'test-client',
        brokerHost: 'localhost',
        tests: [
            {
                description: 'Testing disconnect method',
                method: 'disconnect',
                args: ['1.0'],
                resultKey: 'disconnectResult',
                expected: {
                    disconnectResult: {
                        // Add expected result structure for disconnect here
                    }
                }
            },
            {
                description: 'Testing connect method with invalid broker',
                method: 'connect',
                args: [true, '1.0', 600000],
                resultKey: 'connectError',
                expected: {
                    connectError: {
                        error: 'Unable to connect status code: 404' // Example error message
                    }
                }
            }
        ]
    },
    */
    // Add more test cases as needed
]
