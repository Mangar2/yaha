/**
 * @license
 * This software is licensed under the GNU LESSER GENERAL PUBLIC LICENSE Version 3. It is furnished
 * "as is", without any support, and with no warranty, express or implied, as to its usefulness for
 * any purpose.
 *
 * @author Volker Böhm
 * @copyright Copyright (c) 2020 Volker Böhm
 * @overview
 * Provides a standard client to communicate with the mqtt broker
 */

'use strict'

'use strict'

const { TestRun } = require('@mangar2/unittest')
const { Connect } = require('../dist/index') 

const VERBOSE = true
const DEBUG = true

const testRun = new TestRun(VERBOSE, DEBUG)

testRun.on('prepare', async (testSet) => {
    const connect = new Connect(testSet.clientId, 'localhost', 0)
    return { connect }
})

const runTest = async (testCase, testObject) => {
    const { method, args } = testCase
    const { connect } = testObject
    let result

    try {
        result = await connect[method](...args)
    } catch (error) {
        result = { error: error.message }
    }

    return result
}

testRun.on('run', async (testCase, testObject) => {
    return runTest(testCase, testObject)
})

testRun.on('break', async (testCase, testObject) => {
    // Re-run the test for debugging purposes
    const result = await runTest(testCase, testObject)
    return result
})

testRun.on('cleanup', async () => {
    // Implement any necessary cleanup, e.g., closing connections
})

module.exports = () => testRun.asyncRun( ['connect-cases' ], __dirname, 54, 'js' )
