/**
 * ---------------------------------------------------------------------------------------------------
 * This software is licensed under the GNU LESSER GENERAL PUBLIC LICENSE Version 3. It is furnished
 * "as is", without any support, and with no warranty, express or implied, as to its usefulness for
 * any purpose.
 *
 * File:      mqttversion.js
 *
 * Author:      Volker BÃ¶hm
 * Copyright:   Volker BÃ¶hm
 * ---------------------------------------------------------------------------------------------------
 */

'use strict';

var receive = {
    "0.0": 
        /**
         * creates the return types for a receive message
         * @param {object} headers input headers
         */
        headers => {
            let version = '0.0';
            let result =  {
                headers: { "Content-Type": "text/plain", version},
                payload: "puback",
                httpcode: 200
            }
            if (headers.id !== undefined) {
                result.headers.id = headers.id;
            }
            return result;
        },
    "1.0":
        /**
         * creates the return types for a receive message
         * @param {object} headers input headers
         */
        headers => {
            let version = '1.0';
            let qos = headers.qos;
            let result =  {
                headers: { "Content-Type": "application/json", version},
                payload: "",
                httpcode: 204
            }
            if (qos == 1) { result.headers.packet = 'puback'; }
            if (qos == 2) { result.headers.packet = 'pubrec'; }
            if (headers.packetid !== undefined) {
                result.headers.packetid = headers.packetid;
            }
            return result;
        } 
}

/**
 * Extracts the version from a headers object
 * @param {object} headers object with member version
 */
function getVersion(headers) {
    let version = headers.version === undefined? "0.0" : headers.version;
    if (receive[version] === undefined) {
        throw "undefined version " + version;
    }
    return version;
}
  
module.exports = {
    receive: (headers) => {
        return receive[getVersion(headers)](headers);
    }
}
