/**
 * @license
 * This software is licensed under the GNU LESSER GENERAL PUBLIC LICENSE Version 3. It is furnished
 * "as is", without any support, and with no warranty, express or implied, as to its usefulness for
 * any purpose.
 *
 * @author Volker Böhm
 * @copyright Copyright (c) 2020 Volker Böhm
 * @overview
 * Main program, service to store messages and provide a rest api to access to stored messages an the message hierarchy
 * This service is implemented by connecting the mqttclient and the messagestore to a new service
 */

'use strict'

const { errorLog } = require('@mangar2/utils')

/**
 * @private
 * @description Registers the rs485 interface service, if the configuration demands it
 * @param {MqttClient} mqttClient client providing mqtt services
 * @param {Object} config configuration data
 * @param {Object} config.messageStore configuration for the automation service
 * @param {Array} config.runservices.services configured services to install
 */
function registerMessageStore (mqttClient, config) {
    if (config.messageStore && config.runservices.services.includes('messageStore')) {
        try {
            const MessageStore = require('@mangar2/messagestore')
            const messageStore = new MessageStore(config.messageStore)

            const subscriptions = config.messageStore.subscriptions
            mqttClient.registerRecipient(subscriptions, (message) => {
                return messageStore.addMessage(message)
            })
            mqttClient.registerCloseFunction(async () => { messageStore.close() })
            messageStore.run()

            console.log('started messageStore service')
        } catch (err) {
            errorLog(err, false)
        }
    }
}

module.exports = registerMessageStore
