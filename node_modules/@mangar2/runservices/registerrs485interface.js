/**
 * @license
 * This software is licensed under the GNU LESSER GENERAL PUBLIC LICENSE Version 3. It is furnished
 * "as is", without any support, and with no warranty, express or implied, as to its usefulness for
 * any purpose.
 *
 * @author Volker Böhm
 * @copyright Copyright (c) 2020 Volker Böhm
 */

'use strict'

const { errorLog } = require('@mangar2/utils')

/**
 * @private
 * @description Registers the rs485 interface service, if the configuration demands it
 * @param {MqttClient} mqttClient client providing mqtt services
 * @param {Object} config configuration data
 * @param {Object} config.rs485Interface configuration for the automation service
 * @param {Array} config.runservices.services configured services to install
 */
function registerRS485Interface (mqttClient, config) {
    if (config.rs485 && config.runservices.services.includes('rs485')) {
        try {
            const RS485Interface = require('@mangar2/rs485interface')
            // watchRules()
            const rs485 = new RS485Interface(config.rs485Interface)
            const subscriptions = rs485.getSubscriptions()
            mqttClient.registerRecipient(subscriptions, (message) => {
                rs485.processMessage(message)
            })
            rs485.on('publish', (message) => mqttClient.publish(message))
            mqttClient.registerCloseFunction(async () => { rs485.close() })
            rs485.run()

            console.log('started rs485interface service')
        } catch (err) {
            errorLog(err, false)
        }
    }
}

module.exports = registerRS485Interface
