/**
 * @license
 * This software is licensed under the GNU LESSER GENERAL PUBLIC LICENSE Version 3. It is furnished
 * "as is", without any support, and with no warranty, express or implied, as to its usefulness for
 * any purpose.
 *
 * @author Volker Böhm
 * @copyright Copyright (c) 2020 Volker Böhm
 */

'use strict'

const { errorLog } = require('@mangar2/utils')

/**
 * @private
 * @description Registers the rs485 interface service, if the configuration demands it
 * @param {MqttClient} mqttClient client providing mqtt services
 * @param {Object} config configuration data
 * @param {Object} config.rs485Interface configuration for the automation service
 * @param {Array} config.runservices.services configured services to install
 */
function registerSerialDevice (mqttClient, config) {
    if (config.serialDevice && config.runservices.services.includes('serialDevice')) {
        try {
            const SerialDevice = require('@mangar2/serialDevice')
            // watchRules()
            const serialDevice = new SerialDevice(config.rs485Interface)
            const subscriptions = serialDevice.getSubscriptions()
            mqttClient.registerRecipient(subscriptions, (message) => {
                serialDevice.processMessage(message)
            })
            serialDevice.on('publish', (message) => mqttClient.publish(message))
            mqttClient.registerCloseFunction(async () => { serialDevice.close() })
            serialDevice.run()

            console.log('started serialDevice service')
        } catch (err) {
            errorLog(err, false)
        }
    }
}

module.exports = registerSerialDevice
