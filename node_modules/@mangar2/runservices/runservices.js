/**
 * @license
 * This software is licensed under the GNU LESSER GENERAL PUBLIC LICENSE Version 3. It is furnished
 * "as is", without any support, and with no warranty, express or implied, as to its usefulness for
 * any purpose.
 *
 * @author Volker Böhm
 * @copyright Copyright (c) 2020 Volker Böhm
 * @overview
 * Runs any yaha service as an mqttclient. Services needs to bring the following interface:
 * - A "prepare(config, [serviceObject=null])" function - returning a service object and initializes it
 * - A getSubscriptions method to get a list of topics to subscribe {topic: QoS, topic: QoS, ...}
 * - A handle message method to handle a mqtt message sent to the service
 * - Optional - a on('publish', callback) method to register a publish message callback
 * - Optional - a close() function to be called to close/stop the service´s background tasks
 * - Optional - a run() function to start background tasks
 */

'use strict'

const MqttClient = require('@mangar2/mqttclient')
const readConfig = require('./configuration')
const { registerService } = require('./registerservice')

const config = readConfig('yahaconfig.json')
const mqttClient = new MqttClient(config.runservices)

mqttClient.run()

registerService(mqttClient, config, config.automation, 'automation', '@mangar2/automation')
registerService(mqttClient, config, config.serialDevice, 'serialDevice', '@mangar2/serialDevice')

const registerRS485Interface = require('./registerrs485interface')
registerRS485Interface(mqttClient, config)

const registerRemoteService = require('./registerremoteservice')
registerRemoteService(mqttClient, config)

const registerOpensensemap = require('./registeropensensemap')
registerOpensensemap(mqttClient, config)

const registerPushover = require('./registerpushover')
registerPushover(mqttClient, config)

const registerSunnyportal = require('./registersunnyportal')
registerSunnyportal(mqttClient, config)

const registerMessageStore = require('./registermessagestore')
registerMessageStore(mqttClient, config)

// only for testing. This is a main program
module.exports = mqttClient
