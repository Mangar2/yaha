/**
 * ---------------------------------------------------------------------------------------------------
 * This software is licensed under the GNU LESSER GENERAL PUBLIC LICENSE Version 3. It is furnished
 * "as is", without any support, and with no warranty, express or implied, as to its usefulness for
 * any purpose.
 *
 * File:      arduinoDNS.js
 *
 * Author:      Volker Böhm
 * Copyright:   Volker Böhm
 * Version:     1.0
 * ---------------------------------------------------------------------------------------------------
 */

'use strict'

const keyMap = require('./key.json')
const locationMap = require('./location.json')

/**
 * Creates a class providing mapping functionality between key/address and topics
 */
class ArduinoDNS {
    constructor () {
        this._topicMap = {}
        for (const address in locationMap) {
            for (const key in keyMap) {
                const topic = locationMap[address] + keyMap[key]
                this._topicMap[topic] = { address, key }
            }
        }
    }

    /**
     * Provides a topic string for a device property
     * @param {string} address location of the device
     * @param {string} key key of device setting
     * @returns {string} topic
     */
    getTopic (address, key) {
        var location = locationMap[address]
        var device = keyMap[key]
        if (location === undefined) {
            throw 'unknown address ' + address
        }
        if (device === undefined) {
            throw 'unknown key ' + key
        }
        return location + device
    }

    /**
     * Gets address and key of a topic
     * @param {string} topic topic to look for
     * @returns {{string, string}} {address, key} address and key of the topic
     */
    getAddressAndKey (topic) {
        const result = this._topicMap[topic]
        return result
    }

    /**
     * Processes a callback for each available topic
     * @param {function} callback (topic) = {}
     */
    foreachTopic (callback) {
        for (const topic in this._topicMap) {
            callback(topic)
        }
    }
}

module.exports = ArduinoDNS
