/**
 * @license
 * This software is licensed under the GNU LESSER GENERAL PUBLIC LICENSE Version 3. It is furnished
 * "as is", without any support, and with no warranty, express or implied, as to its usefulness for
 * any purpose.
 *
 * @author Volker Böhm
 * @copyright Copyright (c) 2020 Volker Böhm
 */

'use strict'
const Testrun = require('@mangar2/testrun')
const  { TaskQueue } = require('../index')
const { delay } = require('../index')
const VERBOSE = false
const testrun = new Testrun(VERBOSE)

testrun.on('prepare', async (testcase) => {
    const taskQueue = new TaskQueue(100)
    taskQueue.callCount = 0
    taskQueue.on('task', () => { 
        taskQueue.callCount++ 
    })
    return { taskQueue, functionName: testcase.functionName }
})

const runTest = async (test, testObject) => {
    const { taskQueue, functionName } = testObject
    if (functionName === 'addTask') {
        for (const param of test.parameter) {
            taskQueue.addTask(param)
        }
    } else if (functionName === 'on') {
        taskQueue.on(...test.parameter)
    }
    if (test.delay) {
        await delay(test.delay)
    }
    return taskQueue
}

testrun.on('run', runTest)

testrun.on('break', async (test, testObject) => {
    runTest(test, testObject)
})


module.exports = () => { 
    console.log('This test set will run 15 seconds ...')
    testrun.asyncRun(['test-taskqueue-cases'], __dirname, 7, 'js') 
}