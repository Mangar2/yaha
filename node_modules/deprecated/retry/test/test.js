/**
 * @license
 * This software is licensed under the GNU LESSER GENERAL PUBLIC LICENSE Version 3. It is furnished
 * "as is", without any support, and with no warranty, express or implied, as to its usefulness for
 * any purpose.
 *
 * @author Volker Böhm
 * @copyright Copyright (c) 2020 Volker Böhm
 */

'use strict'

const UnitTest = require('@mangar2/unittest')
const Retry = require('../retry.js')

const unitTest = new UnitTest(false)
const retry = new Retry()

async function test (id, delay, count) {
    let result = 0
    await retry.retry(count, delay, (cur) => { unitTest.log('hello' + cur); result = cur })
    unitTest.assertEqual(result, count - 1, id)
}

async function topicTest (id, delay, count, willBreak = false) {
    let result = 0
    await retry.topicRetry(id, count, delay, (cur) => { unitTest.log(id + ' ' + cur); result = cur })
    if (willBreak) {
        unitTest.assertEqual(result, 0, id)
    } else {
        unitTest.assertEqual(result, count - 1, id)
    }
}

async function testAll () {
    let promises = []
    promises.push(test('test1', 1000, 4))
    promises.push(test('test1', 500, 4))
    promises.push(test('test2', 1, 4))
    promises.push(test('test3', 0, 4))

    promises.push(topicTest('test11', 1000, 4, true))
    promises.push(topicTest('test11', 500, 4))
    promises.push(topicTest('test12', 1, 4))
    promises.push(topicTest('test13', 0, 4))
    await Promise.all(promises)
    promises = []
    for (let i = 0; i < 1000; i++) {
        promises.push(topicTest('test21', 10, 10, true))
    }
    promises.push(topicTest('test21', 10, 10))
    await Promise.all(promises)
    unitTest.showResult(1009)
}

testAll()
